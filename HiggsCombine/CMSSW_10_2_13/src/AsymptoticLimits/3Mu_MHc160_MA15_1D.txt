 <<< Combine >>> 
Will use a-priori expected background instead of a-posteriori one.
>>> method used is AsymptoticLimits
>>> random number generator seed is 123456
[#0] ERROR:Eval -- RooAbsReal::logEvalError(model_s) evaluation error, 
 origin       : RooProdPdf::model_s[ modelObs_s * nuisancePdf ]
 message      : getLogVal() top-level p.d.f evaluates to zero
 server values: !pdfs=(modelObs_s = 0/1,nuisancePdf = 1)
[#0] ERROR:Eval -- RooAbsReal::logEvalError(nll_model_s__Asymptotic_asimovDataset_) evaluation error, 
 origin       : RooNLLVar::nll_model_s__Asymptotic_asimovDataset_[ paramSet=(acceptance_VV,acceptance_conv,acceptance_fake,acceptance_ttX,r) ]
 message      : function value is NAN
 server values: paramSet=(acceptance_VV = -0.00314245 +/- 1.9315,acceptance_conv = -0.00178708 +/- 1.93377,acceptance_fake = -0.0054675 +/- 1.79881,acceptance_ttX = -0.00122665 +/- 1.93415,r = 10 +/- 1.00708)
[#0] ERROR:Eval -- RooAbsReal::logEvalError(nll_model_s__Asymptotic_asimovDataset__with_constr) evaluation error, 
 origin       : RooAddition::nll_model_s__Asymptotic_asimovDataset__with_constr[ nll_model_s__Asymptotic_asimovDataset_ + nll_model_s__Asymptotic_asimovDataset__constr ]
 message      : function value is NAN
 server values: !set=(nll_model_s__Asymptotic_asimovDataset_ = -nan,nll_model_s__Asymptotic_asimovDataset__constr = 3.67578)

 -- AsymptoticLimits ( CLs ) --
Expected  2.5%: r < 0.0444
Expected 16.0%: r < 0.0605
Expected 50.0%: r < 0.0874
Expected 84.0%: r < 0.1285
Expected 97.5%: r < 0.1837

Done in 0.00 min (cpu), 0.00 min (real)
